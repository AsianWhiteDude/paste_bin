version: '3.9'

services:
  django:
    build:
      dockerfile: Dockerfile
    container_name: django
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    env_file: paste_bin/.env
    volumes:
      - static_volume:/static
    networks:
      - pastebin
    restart: on-failure

  nginx:
    image: nginx:latest
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/proxy_params:/etc/nginx/proxy_params
      - static_volume:/static
    ports:
      - "8080:80"
    networks:
      - pastebin
    depends_on:
      - django

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_USER: pastebin
      POSTGRES_PASSWORD: pastebin
      POSTGRES_DB: pastebin
    ports:
      - "5432:5432"
    networks:
      - pastebin
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-U", "pastebin" ]
      interval: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - pastebin

  flask:
    build:
      context: flask_app
    container_name: flask
    environment:
      FLASK_APP: run
      FLASK_DEBUG: 1
    command: flask run -h 0.0.0.0
    volumes:
      - ./flask_app:/app
    ports:
      - "5000:5000"
    networks:
      - pastebin

  celery:
    build:
      context: flask_app
    environment:
      FLASK_APP: run
    command: celery -A tasks.celery worker --loglevel=info
    volumes:
      - ./flask_app:/app
    depends_on:
      - redis
    networks:
      - pastebin
    restart: on-failure

  post_cleaner:
    build:
      context: post_cleaner
    command: celery -A cleaner.celery worker --loglevel=info
    env_file:
      - post_cleaner/.env
    volumes:
      - ./post_cleaner:/cleaner
    networks:
      - pastebin
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure

  celery_beat:
    build:
      context: post_cleaner
    command: celery -A cleaner.celery beat --loglevel=info
    env_file:
      - post_cleaner/.env
    volumes:
      - ./post_cleaner:/cleaner
    networks:
      - pastebin
    depends_on:
      postgres:
        condition: service_healthy
    restart: on-failure

  rabbitmq:
    image: rabbitmq:3-management-alpine
    hostname: rabbitmq
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: "guest"
      RABBITMQ_DEFAULT_PASS: "guest"
    networks:
      - pastebin
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq

volumes:
  static_volume:
  rabbitmq-data:

networks:
  pastebin:
    driver: bridge